graph(%1 : Double(64, 3, 3, 3), %2 : Double(64), %3 : Double(64), %4 : Double(64), %5 : Double(64, 64, 3, 3), %6 : Double(64), %7 : Double(64), %8 : Double(64), %9 : Double(128, 64, 3, 3), %10 : Double(128), %11 : Double(128), %12 : Double(128), %13 : Double(128, 128, 3, 3), %14 : Double(128), %15 : Double(128), %16 : Double(128), %17 : Double(256, 128, 3, 3), %18 : Double(256), %19 : Double(256), %20 : Double(256), %21 : Double(256, 256, 3, 3), %22 : Double(256), %23 : Double(256), %24 : Double(256), %25 : Double(256, 256, 3, 3), %26 : Double(256), %27 : Double(256), %28 : Double(256), %29 : Double(512, 256, 3, 3), %30 : Double(512), %31 : Double(512), %32 : Double(512), %33 : Double(512, 512, 3, 3), %34 : Double(512), %35 : Double(512), %36 : Double(512), %37 : Double(512, 512, 3, 3), %38 : Double(512), %39 : Double(512), %40 : Double(512), %41 : Double(512, 512, 3, 3), %42 : Double(512), %43 : Double(512), %44 : Double(512), %45 : Double(512, 512, 3, 3), %46 : Double(512), %47 : Double(512), %48 : Double(512), %49 : Double(512, 512, 3, 3), %50 : Double(512), %51 : Double(512), %52 : Double(512), %53 : Double(4096, 25088), %54 : Double(4096), %55 : Double(4096, 4096), %56 : Double(4096), %57 : Double(1000, 4096), %58 : Double(1000), %59 : Double(10, 3, 224, 224)) {
  %60.0 : Double(10, 64, 224, 224) = CppOp[ConvForward](%59, %1, %2), uses = [[%62.i0]];
  %62.0 : Double(10, 64, 224, 224) = CppOp[N5torch8autograd16BatchNormForwardE](%60.0, %3, %4), uses = [[%64.i0]];
  %64.0 : Double(10, 64, 224, 224) = ^Threshold(0, 0, False)(%62.0), uses = [[%66.i0]];
  %66.0 : Double(10, 64, 224, 224) = CppOp[ConvForward](%64.0, %5, %6), uses = [[%68.i0]];
  %68.0 : Double(10, 64, 224, 224) = CppOp[N5torch8autograd16BatchNormForwardE](%66.0, %7, %8), uses = [[%70.i0]];
  %70.0 : Double(10, 64, 224, 224) = ^Threshold(0, 0, False)(%68.0), uses = [[%72.i0]];
  %72.0 : Double(10, 64, 112, 112), %72.1 : Long(10, 64, 112, 112) = ^MaxPool2d(2, 2, 0, 1, False)(%70.0), uses = [[%75.i0], []];
  %75.0 : Double(10, 128, 112, 112) = CppOp[ConvForward](%72.0, %9, %10), uses = [[%77.i0]];
  %77.0 : Double(10, 128, 112, 112) = CppOp[N5torch8autograd16BatchNormForwardE](%75.0, %11, %12), uses = [[%79.i0]];
  %79.0 : Double(10, 128, 112, 112) = ^Threshold(0, 0, False)(%77.0), uses = [[%81.i0]];
  %81.0 : Double(10, 128, 112, 112) = CppOp[ConvForward](%79.0, %13, %14), uses = [[%83.i0]];
  %83.0 : Double(10, 128, 112, 112) = CppOp[N5torch8autograd16BatchNormForwardE](%81.0, %15, %16), uses = [[%85.i0]];
  %85.0 : Double(10, 128, 112, 112) = ^Threshold(0, 0, False)(%83.0), uses = [[%87.i0]];
  %87.0 : Double(10, 128, 56, 56), %87.1 : Long(10, 128, 56, 56) = ^MaxPool2d(2, 2, 0, 1, False)(%85.0), uses = [[%90.i0], []];
  %90.0 : Double(10, 256, 56, 56) = CppOp[ConvForward](%87.0, %17, %18), uses = [[%92.i0]];
  %92.0 : Double(10, 256, 56, 56) = CppOp[N5torch8autograd16BatchNormForwardE](%90.0, %19, %20), uses = [[%94.i0]];
  %94.0 : Double(10, 256, 56, 56) = ^Threshold(0, 0, False)(%92.0), uses = [[%96.i0]];
  %96.0 : Double(10, 256, 56, 56) = CppOp[ConvForward](%94.0, %21, %22), uses = [[%98.i0]];
  %98.0 : Double(10, 256, 56, 56) = CppOp[N5torch8autograd16BatchNormForwardE](%96.0, %23, %24), uses = [[%100.i0]];
  %100.0 : Double(10, 256, 56, 56) = ^Threshold(0, 0, False)(%98.0), uses = [[%102.i0]];
  %102.0 : Double(10, 256, 56, 56) = CppOp[ConvForward](%100.0, %25, %26), uses = [[%104.i0]];
  %104.0 : Double(10, 256, 56, 56) = CppOp[N5torch8autograd16BatchNormForwardE](%102.0, %27, %28), uses = [[%106.i0]];
  %106.0 : Double(10, 256, 56, 56) = ^Threshold(0, 0, False)(%104.0), uses = [[%108.i0]];
  %108.0 : Double(10, 256, 28, 28), %108.1 : Long(10, 256, 28, 28) = ^MaxPool2d(2, 2, 0, 1, False)(%106.0), uses = [[%111.i0], []];
  %111.0 : Double(10, 512, 28, 28) = CppOp[ConvForward](%108.0, %29, %30), uses = [[%113.i0]];
  %113.0 : Double(10, 512, 28, 28) = CppOp[N5torch8autograd16BatchNormForwardE](%111.0, %31, %32), uses = [[%115.i0]];
  %115.0 : Double(10, 512, 28, 28) = ^Threshold(0, 0, False)(%113.0), uses = [[%117.i0]];
  %117.0 : Double(10, 512, 28, 28) = CppOp[ConvForward](%115.0, %33, %34), uses = [[%119.i0]];
  %119.0 : Double(10, 512, 28, 28) = CppOp[N5torch8autograd16BatchNormForwardE](%117.0, %35, %36), uses = [[%121.i0]];
  %121.0 : Double(10, 512, 28, 28) = ^Threshold(0, 0, False)(%119.0), uses = [[%123.i0]];
  %123.0 : Double(10, 512, 28, 28) = CppOp[ConvForward](%121.0, %37, %38), uses = [[%125.i0]];
  %125.0 : Double(10, 512, 28, 28) = CppOp[N5torch8autograd16BatchNormForwardE](%123.0, %39, %40), uses = [[%127.i0]];
  %127.0 : Double(10, 512, 28, 28) = ^Threshold(0, 0, False)(%125.0), uses = [[%129.i0]];
  %129.0 : Double(10, 512, 14, 14), %129.1 : Long(10, 512, 14, 14) = ^MaxPool2d(2, 2, 0, 1, False)(%127.0), uses = [[%132.i0], []];
  %132.0 : Double(10, 512, 14, 14) = CppOp[ConvForward](%129.0, %41, %42), uses = [[%134.i0]];
  %134.0 : Double(10, 512, 14, 14) = CppOp[N5torch8autograd16BatchNormForwardE](%132.0, %43, %44), uses = [[%136.i0]];
  %136.0 : Double(10, 512, 14, 14) = ^Threshold(0, 0, False)(%134.0), uses = [[%138.i0]];
  %138.0 : Double(10, 512, 14, 14) = CppOp[ConvForward](%136.0, %45, %46), uses = [[%140.i0]];
  %140.0 : Double(10, 512, 14, 14) = CppOp[N5torch8autograd16BatchNormForwardE](%138.0, %47, %48), uses = [[%142.i0]];
  %142.0 : Double(10, 512, 14, 14) = ^Threshold(0, 0, False)(%140.0), uses = [[%144.i0]];
  %144.0 : Double(10, 512, 14, 14) = CppOp[ConvForward](%142.0, %49, %50), uses = [[%146.i0]];
  %146.0 : Double(10, 512, 14, 14) = CppOp[N5torch8autograd16BatchNormForwardE](%144.0, %51, %52), uses = [[%148.i0]];
  %148.0 : Double(10, 512, 14, 14) = ^Threshold(0, 0, False)(%146.0), uses = [[%150.i0]];
  %150.0 : Double(10, 512, 7, 7), %150.1 : Long(10, 512, 7, 7) = ^MaxPool2d(2, 2, 0, 1, False)(%148.0), uses = [[%153.i0], []];
  %153.0 : Double(10, 25088) = ^View((10, -1))(%150.0), uses = [[%157.i1]];
  %155.0 : Double(25088!, 4096!) = ^Transpose(0, 1)(%53), uses = [[%157.i2]];
  %157.0 : Double(10, 4096) = ^Addmm(1, 1, False)(%54, %153.0, %155.0), uses = [[%159.i0]];
  %159.0 : Double(10, 4096) = ^Threshold(0, 0, False)(%157.0), uses = [[%161.i0]];
  %161.0 : Double(10, 4096) = ^Dropout(0.5, True, False)(%159.0), uses = [[%165.i1]];
  %163.0 : Double(4096!, 4096!) = ^Transpose(0, 1)(%55), uses = [[%165.i2]];
  %165.0 : Double(10, 4096) = ^Addmm(1, 1, False)(%56, %161.0, %163.0), uses = [[%167.i0]];
  %167.0 : Double(10, 4096) = ^Threshold(0, 0, False)(%165.0), uses = [[%169.i0]];
  %169.0 : Double(10, 4096) = ^Dropout(0.5, True, False)(%167.0), uses = [[%173.i1]];
  %171.0 : Double(4096!, 1000!) = ^Transpose(0, 1)(%57), uses = [[%173.i2]];
  %173.0 : Double(10, 1000) = ^Addmm(1, 1, False)(%58, %169.0, %171.0), uses = [[%0.i0]];
  return (%173.0);
}
