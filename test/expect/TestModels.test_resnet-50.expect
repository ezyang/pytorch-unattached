graph(%1 : Float(64, 3, 7, 7)
      %2 : Float(64)
      %3 : Float(64)
      %4 : Float(64)
      %5 : Float(64)
      %6 : Float(64, 64, 1, 1)
      %7 : Float(64)
      %8 : Float(64)
      %9 : Float(64)
      %10 : Float(64)
      %11 : Float(64, 64, 3, 3)
      %12 : Float(64)
      %13 : Float(64)
      %14 : Float(64)
      %15 : Float(64)
      %16 : Float(256, 64, 1, 1)
      %17 : Float(256)
      %18 : Float(256)
      %19 : Float(256)
      %20 : Float(256)
      %21 : Float(256, 64, 1, 1)
      %22 : Float(256)
      %23 : Float(256)
      %24 : Float(256)
      %25 : Float(256)
      %26 : Float(64, 256, 1, 1)
      %27 : Float(64)
      %28 : Float(64)
      %29 : Float(64)
      %30 : Float(64)
      %31 : Float(64, 64, 3, 3)
      %32 : Float(64)
      %33 : Float(64)
      %34 : Float(64)
      %35 : Float(64)
      %36 : Float(256, 64, 1, 1)
      %37 : Float(256)
      %38 : Float(256)
      %39 : Float(256)
      %40 : Float(256)
      %41 : Float(64, 256, 1, 1)
      %42 : Float(64)
      %43 : Float(64)
      %44 : Float(64)
      %45 : Float(64)
      %46 : Float(64, 64, 3, 3)
      %47 : Float(64)
      %48 : Float(64)
      %49 : Float(64)
      %50 : Float(64)
      %51 : Float(256, 64, 1, 1)
      %52 : Float(256)
      %53 : Float(256)
      %54 : Float(256)
      %55 : Float(256)
      %56 : Float(128, 256, 1, 1)
      %57 : Float(128)
      %58 : Float(128)
      %59 : Float(128)
      %60 : Float(128)
      %61 : Float(128, 128, 3, 3)
      %62 : Float(128)
      %63 : Float(128)
      %64 : Float(128)
      %65 : Float(128)
      %66 : Float(512, 128, 1, 1)
      %67 : Float(512)
      %68 : Float(512)
      %69 : Float(512)
      %70 : Float(512)
      %71 : Float(512, 256, 1, 1)
      %72 : Float(512)
      %73 : Float(512)
      %74 : Float(512)
      %75 : Float(512)
      %76 : Float(128, 512, 1, 1)
      %77 : Float(128)
      %78 : Float(128)
      %79 : Float(128)
      %80 : Float(128)
      %81 : Float(128, 128, 3, 3)
      %82 : Float(128)
      %83 : Float(128)
      %84 : Float(128)
      %85 : Float(128)
      %86 : Float(512, 128, 1, 1)
      %87 : Float(512)
      %88 : Float(512)
      %89 : Float(512)
      %90 : Float(512)
      %91 : Float(128, 512, 1, 1)
      %92 : Float(128)
      %93 : Float(128)
      %94 : Float(128)
      %95 : Float(128)
      %96 : Float(128, 128, 3, 3)
      %97 : Float(128)
      %98 : Float(128)
      %99 : Float(128)
      %100 : Float(128)
      %101 : Float(512, 128, 1, 1)
      %102 : Float(512)
      %103 : Float(512)
      %104 : Float(512)
      %105 : Float(512)
      %106 : Float(128, 512, 1, 1)
      %107 : Float(128)
      %108 : Float(128)
      %109 : Float(128)
      %110 : Float(128)
      %111 : Float(128, 128, 3, 3)
      %112 : Float(128)
      %113 : Float(128)
      %114 : Float(128)
      %115 : Float(128)
      %116 : Float(512, 128, 1, 1)
      %117 : Float(512)
      %118 : Float(512)
      %119 : Float(512)
      %120 : Float(512)
      %121 : Float(256, 512, 1, 1)
      %122 : Float(256)
      %123 : Float(256)
      %124 : Float(256)
      %125 : Float(256)
      %126 : Float(256, 256, 3, 3)
      %127 : Float(256)
      %128 : Float(256)
      %129 : Float(256)
      %130 : Float(256)
      %131 : Float(1024, 256, 1, 1)
      %132 : Float(1024)
      %133 : Float(1024)
      %134 : Float(1024)
      %135 : Float(1024)
      %136 : Float(1024, 512, 1, 1)
      %137 : Float(1024)
      %138 : Float(1024)
      %139 : Float(1024)
      %140 : Float(1024)
      %141 : Float(256, 1024, 1, 1)
      %142 : Float(256)
      %143 : Float(256)
      %144 : Float(256)
      %145 : Float(256)
      %146 : Float(256, 256, 3, 3)
      %147 : Float(256)
      %148 : Float(256)
      %149 : Float(256)
      %150 : Float(256)
      %151 : Float(1024, 256, 1, 1)
      %152 : Float(1024)
      %153 : Float(1024)
      %154 : Float(1024)
      %155 : Float(1024)
      %156 : Float(256, 1024, 1, 1)
      %157 : Float(256)
      %158 : Float(256)
      %159 : Float(256)
      %160 : Float(256)
      %161 : Float(256, 256, 3, 3)
      %162 : Float(256)
      %163 : Float(256)
      %164 : Float(256)
      %165 : Float(256)
      %166 : Float(1024, 256, 1, 1)
      %167 : Float(1024)
      %168 : Float(1024)
      %169 : Float(1024)
      %170 : Float(1024)
      %171 : Float(256, 1024, 1, 1)
      %172 : Float(256)
      %173 : Float(256)
      %174 : Float(256)
      %175 : Float(256)
      %176 : Float(256, 256, 3, 3)
      %177 : Float(256)
      %178 : Float(256)
      %179 : Float(256)
      %180 : Float(256)
      %181 : Float(1024, 256, 1, 1)
      %182 : Float(1024)
      %183 : Float(1024)
      %184 : Float(1024)
      %185 : Float(1024)
      %186 : Float(256, 1024, 1, 1)
      %187 : Float(256)
      %188 : Float(256)
      %189 : Float(256)
      %190 : Float(256)
      %191 : Float(256, 256, 3, 3)
      %192 : Float(256)
      %193 : Float(256)
      %194 : Float(256)
      %195 : Float(256)
      %196 : Float(1024, 256, 1, 1)
      %197 : Float(1024)
      %198 : Float(1024)
      %199 : Float(1024)
      %200 : Float(1024)
      %201 : Float(256, 1024, 1, 1)
      %202 : Float(256)
      %203 : Float(256)
      %204 : Float(256)
      %205 : Float(256)
      %206 : Float(256, 256, 3, 3)
      %207 : Float(256)
      %208 : Float(256)
      %209 : Float(256)
      %210 : Float(256)
      %211 : Float(1024, 256, 1, 1)
      %212 : Float(1024)
      %213 : Float(1024)
      %214 : Float(1024)
      %215 : Float(1024)
      %216 : Float(512, 1024, 1, 1)
      %217 : Float(512)
      %218 : Float(512)
      %219 : Float(512)
      %220 : Float(512)
      %221 : Float(512, 512, 3, 3)
      %222 : Float(512)
      %223 : Float(512)
      %224 : Float(512)
      %225 : Float(512)
      %226 : Float(2048, 512, 1, 1)
      %227 : Float(2048)
      %228 : Float(2048)
      %229 : Float(2048)
      %230 : Float(2048)
      %231 : Float(2048, 1024, 1, 1)
      %232 : Float(2048)
      %233 : Float(2048)
      %234 : Float(2048)
      %235 : Float(2048)
      %236 : Float(512, 2048, 1, 1)
      %237 : Float(512)
      %238 : Float(512)
      %239 : Float(512)
      %240 : Float(512)
      %241 : Float(512, 512, 3, 3)
      %242 : Float(512)
      %243 : Float(512)
      %244 : Float(512)
      %245 : Float(512)
      %246 : Float(2048, 512, 1, 1)
      %247 : Float(2048)
      %248 : Float(2048)
      %249 : Float(2048)
      %250 : Float(2048)
      %251 : Float(512, 2048, 1, 1)
      %252 : Float(512)
      %253 : Float(512)
      %254 : Float(512)
      %255 : Float(512)
      %256 : Float(512, 512, 3, 3)
      %257 : Float(512)
      %258 : Float(512)
      %259 : Float(512)
      %260 : Float(512)
      %261 : Float(2048, 512, 1, 1)
      %262 : Float(2048)
      %263 : Float(2048)
      %264 : Float(2048)
      %265 : Float(2048)
      %266 : Float(1000, 2048)
      %267 : Float(1000)
      %268 : Float(2, 3, 224, 224)) {
  %270 : UNKNOWN_TYPE = Undefined(), uses = [%269.i2];
  %271 : Float(2, 64, 112, 112), %272 : Handle = CppOp[ConvForward](%268, %1, %270), uses = [[%273.i0], []];
  %274 : Float(2, 64, 112, 112), %275 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%271, %2, %3), uses = [[%276.i0], []];
  %277 : Float(2, 64, 112, 112), %278 : Handle = ^Threshold(0, 0, True)(%274), uses = [[%279.i0], []];
  %280 : Float(2, 64, 56, 56), %281 : Long(2, 64, 56, 56), %282 : Handle = ^MaxPool2d(3, 2, 1, 1, False)(%277), uses = [[%283.i0, %310.i0], [], []];
  %284 : UNKNOWN_TYPE = Undefined(), uses = [%283.i2];
  %285 : Float(2, 64, 56, 56), %286 : Handle = CppOp[ConvForward](%280, %6, %284), uses = [[%287.i0], []];
  %288 : Float(2, 64, 56, 56), %289 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%285, %7, %8), uses = [[%290.i0], []];
  %291 : Float(2, 64, 56, 56), %292 : Handle = ^Threshold(0, 0, True)(%288), uses = [[%293.i0], []];
  %294 : UNKNOWN_TYPE = Undefined(), uses = [%293.i2];
  %295 : Float(2, 64, 56, 56), %296 : Handle = CppOp[ConvForward](%291, %11, %294), uses = [[%297.i0], []];
  %298 : Float(2, 64, 56, 56), %299 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%295, %12, %13), uses = [[%300.i0], []];
  %301 : Float(2, 64, 56, 56), %302 : Handle = ^Threshold(0, 0, True)(%298), uses = [[%303.i0], []];
  %304 : UNKNOWN_TYPE = Undefined(), uses = [%303.i2];
  %305 : Float(2, 256, 56, 56), %306 : Handle = CppOp[ConvForward](%301, %16, %304), uses = [[%307.i0], []];
  %308 : Float(2, 256, 56, 56), %309 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%305, %17, %18), uses = [[%317.i0], []];
  %311 : UNKNOWN_TYPE = Undefined(), uses = [%310.i2];
  %312 : Float(2, 256, 56, 56), %313 : Handle = CppOp[ConvForward](%280, %21, %311), uses = [[%314.i0], []];
  %315 : Float(2, 256, 56, 56), %316 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%312, %22, %23), uses = [[%317.i1], []];
  %318 : Float(2, 256, 56, 56), %319 : Handle = ^Add(True)(%308, %315), uses = [[%320.i0], []];
  %321 : Float(2, 256, 56, 56), %322 : Handle = ^Threshold(0, 0, True)(%318), uses = [[%323.i0, %350.i1], []];
  %324 : UNKNOWN_TYPE = Undefined(), uses = [%323.i2];
  %325 : Float(2, 64, 56, 56), %326 : Handle = CppOp[ConvForward](%321, %26, %324), uses = [[%327.i0], []];
  %328 : Float(2, 64, 56, 56), %329 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%325, %27, %28), uses = [[%330.i0], []];
  %331 : Float(2, 64, 56, 56), %332 : Handle = ^Threshold(0, 0, True)(%328), uses = [[%333.i0], []];
  %334 : UNKNOWN_TYPE = Undefined(), uses = [%333.i2];
  %335 : Float(2, 64, 56, 56), %336 : Handle = CppOp[ConvForward](%331, %31, %334), uses = [[%337.i0], []];
  %338 : Float(2, 64, 56, 56), %339 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%335, %32, %33), uses = [[%340.i0], []];
  %341 : Float(2, 64, 56, 56), %342 : Handle = ^Threshold(0, 0, True)(%338), uses = [[%343.i0], []];
  %344 : UNKNOWN_TYPE = Undefined(), uses = [%343.i2];
  %345 : Float(2, 256, 56, 56), %346 : Handle = CppOp[ConvForward](%341, %36, %344), uses = [[%347.i0], []];
  %348 : Float(2, 256, 56, 56), %349 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%345, %37, %38), uses = [[%350.i0], []];
  %351 : Float(2, 256, 56, 56), %352 : Handle = ^Add(True)(%348, %321), uses = [[%353.i0], []];
  %354 : Float(2, 256, 56, 56), %355 : Handle = ^Threshold(0, 0, True)(%351), uses = [[%356.i0, %383.i1], []];
  %357 : UNKNOWN_TYPE = Undefined(), uses = [%356.i2];
  %358 : Float(2, 64, 56, 56), %359 : Handle = CppOp[ConvForward](%354, %41, %357), uses = [[%360.i0], []];
  %361 : Float(2, 64, 56, 56), %362 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%358, %42, %43), uses = [[%363.i0], []];
  %364 : Float(2, 64, 56, 56), %365 : Handle = ^Threshold(0, 0, True)(%361), uses = [[%366.i0], []];
  %367 : UNKNOWN_TYPE = Undefined(), uses = [%366.i2];
  %368 : Float(2, 64, 56, 56), %369 : Handle = CppOp[ConvForward](%364, %46, %367), uses = [[%370.i0], []];
  %371 : Float(2, 64, 56, 56), %372 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%368, %47, %48), uses = [[%373.i0], []];
  %374 : Float(2, 64, 56, 56), %375 : Handle = ^Threshold(0, 0, True)(%371), uses = [[%376.i0], []];
  %377 : UNKNOWN_TYPE = Undefined(), uses = [%376.i2];
  %378 : Float(2, 256, 56, 56), %379 : Handle = CppOp[ConvForward](%374, %51, %377), uses = [[%380.i0], []];
  %381 : Float(2, 256, 56, 56), %382 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%378, %52, %53), uses = [[%383.i0], []];
  %384 : Float(2, 256, 56, 56), %385 : Handle = ^Add(True)(%381, %354), uses = [[%386.i0], []];
  %387 : Float(2, 256, 56, 56), %388 : Handle = ^Threshold(0, 0, True)(%384), uses = [[%389.i0, %416.i0], []];
  %390 : UNKNOWN_TYPE = Undefined(), uses = [%389.i2];
  %391 : Float(2, 128, 56, 56), %392 : Handle = CppOp[ConvForward](%387, %56, %390), uses = [[%393.i0], []];
  %394 : Float(2, 128, 56, 56), %395 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%391, %57, %58), uses = [[%396.i0], []];
  %397 : Float(2, 128, 56, 56), %398 : Handle = ^Threshold(0, 0, True)(%394), uses = [[%399.i0], []];
  %400 : UNKNOWN_TYPE = Undefined(), uses = [%399.i2];
  %401 : Float(2, 128, 28, 28), %402 : Handle = CppOp[ConvForward](%397, %61, %400), uses = [[%403.i0], []];
  %404 : Float(2, 128, 28, 28), %405 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%401, %62, %63), uses = [[%406.i0], []];
  %407 : Float(2, 128, 28, 28), %408 : Handle = ^Threshold(0, 0, True)(%404), uses = [[%409.i0], []];
  %410 : UNKNOWN_TYPE = Undefined(), uses = [%409.i2];
  %411 : Float(2, 512, 28, 28), %412 : Handle = CppOp[ConvForward](%407, %66, %410), uses = [[%413.i0], []];
  %414 : Float(2, 512, 28, 28), %415 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%411, %67, %68), uses = [[%423.i0], []];
  %417 : UNKNOWN_TYPE = Undefined(), uses = [%416.i2];
  %418 : Float(2, 512, 28, 28), %419 : Handle = CppOp[ConvForward](%387, %71, %417), uses = [[%420.i0], []];
  %421 : Float(2, 512, 28, 28), %422 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%418, %72, %73), uses = [[%423.i1], []];
  %424 : Float(2, 512, 28, 28), %425 : Handle = ^Add(True)(%414, %421), uses = [[%426.i0], []];
  %427 : Float(2, 512, 28, 28), %428 : Handle = ^Threshold(0, 0, True)(%424), uses = [[%429.i0, %456.i1], []];
  %430 : UNKNOWN_TYPE = Undefined(), uses = [%429.i2];
  %431 : Float(2, 128, 28, 28), %432 : Handle = CppOp[ConvForward](%427, %76, %430), uses = [[%433.i0], []];
  %434 : Float(2, 128, 28, 28), %435 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%431, %77, %78), uses = [[%436.i0], []];
  %437 : Float(2, 128, 28, 28), %438 : Handle = ^Threshold(0, 0, True)(%434), uses = [[%439.i0], []];
  %440 : UNKNOWN_TYPE = Undefined(), uses = [%439.i2];
  %441 : Float(2, 128, 28, 28), %442 : Handle = CppOp[ConvForward](%437, %81, %440), uses = [[%443.i0], []];
  %444 : Float(2, 128, 28, 28), %445 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%441, %82, %83), uses = [[%446.i0], []];
  %447 : Float(2, 128, 28, 28), %448 : Handle = ^Threshold(0, 0, True)(%444), uses = [[%449.i0], []];
  %450 : UNKNOWN_TYPE = Undefined(), uses = [%449.i2];
  %451 : Float(2, 512, 28, 28), %452 : Handle = CppOp[ConvForward](%447, %86, %450), uses = [[%453.i0], []];
  %454 : Float(2, 512, 28, 28), %455 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%451, %87, %88), uses = [[%456.i0], []];
  %457 : Float(2, 512, 28, 28), %458 : Handle = ^Add(True)(%454, %427), uses = [[%459.i0], []];
  %460 : Float(2, 512, 28, 28), %461 : Handle = ^Threshold(0, 0, True)(%457), uses = [[%462.i0, %489.i1], []];
  %463 : UNKNOWN_TYPE = Undefined(), uses = [%462.i2];
  %464 : Float(2, 128, 28, 28), %465 : Handle = CppOp[ConvForward](%460, %91, %463), uses = [[%466.i0], []];
  %467 : Float(2, 128, 28, 28), %468 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%464, %92, %93), uses = [[%469.i0], []];
  %470 : Float(2, 128, 28, 28), %471 : Handle = ^Threshold(0, 0, True)(%467), uses = [[%472.i0], []];
  %473 : UNKNOWN_TYPE = Undefined(), uses = [%472.i2];
  %474 : Float(2, 128, 28, 28), %475 : Handle = CppOp[ConvForward](%470, %96, %473), uses = [[%476.i0], []];
  %477 : Float(2, 128, 28, 28), %478 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%474, %97, %98), uses = [[%479.i0], []];
  %480 : Float(2, 128, 28, 28), %481 : Handle = ^Threshold(0, 0, True)(%477), uses = [[%482.i0], []];
  %483 : UNKNOWN_TYPE = Undefined(), uses = [%482.i2];
  %484 : Float(2, 512, 28, 28), %485 : Handle = CppOp[ConvForward](%480, %101, %483), uses = [[%486.i0], []];
  %487 : Float(2, 512, 28, 28), %488 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%484, %102, %103), uses = [[%489.i0], []];
  %490 : Float(2, 512, 28, 28), %491 : Handle = ^Add(True)(%487, %460), uses = [[%492.i0], []];
  %493 : Float(2, 512, 28, 28), %494 : Handle = ^Threshold(0, 0, True)(%490), uses = [[%495.i0, %522.i1], []];
  %496 : UNKNOWN_TYPE = Undefined(), uses = [%495.i2];
  %497 : Float(2, 128, 28, 28), %498 : Handle = CppOp[ConvForward](%493, %106, %496), uses = [[%499.i0], []];
  %500 : Float(2, 128, 28, 28), %501 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%497, %107, %108), uses = [[%502.i0], []];
  %503 : Float(2, 128, 28, 28), %504 : Handle = ^Threshold(0, 0, True)(%500), uses = [[%505.i0], []];
  %506 : UNKNOWN_TYPE = Undefined(), uses = [%505.i2];
  %507 : Float(2, 128, 28, 28), %508 : Handle = CppOp[ConvForward](%503, %111, %506), uses = [[%509.i0], []];
  %510 : Float(2, 128, 28, 28), %511 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%507, %112, %113), uses = [[%512.i0], []];
  %513 : Float(2, 128, 28, 28), %514 : Handle = ^Threshold(0, 0, True)(%510), uses = [[%515.i0], []];
  %516 : UNKNOWN_TYPE = Undefined(), uses = [%515.i2];
  %517 : Float(2, 512, 28, 28), %518 : Handle = CppOp[ConvForward](%513, %116, %516), uses = [[%519.i0], []];
  %520 : Float(2, 512, 28, 28), %521 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%517, %117, %118), uses = [[%522.i0], []];
  %523 : Float(2, 512, 28, 28), %524 : Handle = ^Add(True)(%520, %493), uses = [[%525.i0], []];
  %526 : Float(2, 512, 28, 28), %527 : Handle = ^Threshold(0, 0, True)(%523), uses = [[%528.i0, %555.i0], []];
  %529 : UNKNOWN_TYPE = Undefined(), uses = [%528.i2];
  %530 : Float(2, 256, 28, 28), %531 : Handle = CppOp[ConvForward](%526, %121, %529), uses = [[%532.i0], []];
  %533 : Float(2, 256, 28, 28), %534 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%530, %122, %123), uses = [[%535.i0], []];
  %536 : Float(2, 256, 28, 28), %537 : Handle = ^Threshold(0, 0, True)(%533), uses = [[%538.i0], []];
  %539 : UNKNOWN_TYPE = Undefined(), uses = [%538.i2];
  %540 : Float(2, 256, 14, 14), %541 : Handle = CppOp[ConvForward](%536, %126, %539), uses = [[%542.i0], []];
  %543 : Float(2, 256, 14, 14), %544 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%540, %127, %128), uses = [[%545.i0], []];
  %546 : Float(2, 256, 14, 14), %547 : Handle = ^Threshold(0, 0, True)(%543), uses = [[%548.i0], []];
  %549 : UNKNOWN_TYPE = Undefined(), uses = [%548.i2];
  %550 : Float(2, 1024, 14, 14), %551 : Handle = CppOp[ConvForward](%546, %131, %549), uses = [[%552.i0], []];
  %553 : Float(2, 1024, 14, 14), %554 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%550, %132, %133), uses = [[%562.i0], []];
  %556 : UNKNOWN_TYPE = Undefined(), uses = [%555.i2];
  %557 : Float(2, 1024, 14, 14), %558 : Handle = CppOp[ConvForward](%526, %136, %556), uses = [[%559.i0], []];
  %560 : Float(2, 1024, 14, 14), %561 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%557, %137, %138), uses = [[%562.i1], []];
  %563 : Float(2, 1024, 14, 14), %564 : Handle = ^Add(True)(%553, %560), uses = [[%565.i0], []];
  %566 : Float(2, 1024, 14, 14), %567 : Handle = ^Threshold(0, 0, True)(%563), uses = [[%568.i0, %595.i1], []];
  %569 : UNKNOWN_TYPE = Undefined(), uses = [%568.i2];
  %570 : Float(2, 256, 14, 14), %571 : Handle = CppOp[ConvForward](%566, %141, %569), uses = [[%572.i0], []];
  %573 : Float(2, 256, 14, 14), %574 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%570, %142, %143), uses = [[%575.i0], []];
  %576 : Float(2, 256, 14, 14), %577 : Handle = ^Threshold(0, 0, True)(%573), uses = [[%578.i0], []];
  %579 : UNKNOWN_TYPE = Undefined(), uses = [%578.i2];
  %580 : Float(2, 256, 14, 14), %581 : Handle = CppOp[ConvForward](%576, %146, %579), uses = [[%582.i0], []];
  %583 : Float(2, 256, 14, 14), %584 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%580, %147, %148), uses = [[%585.i0], []];
  %586 : Float(2, 256, 14, 14), %587 : Handle = ^Threshold(0, 0, True)(%583), uses = [[%588.i0], []];
  %589 : UNKNOWN_TYPE = Undefined(), uses = [%588.i2];
  %590 : Float(2, 1024, 14, 14), %591 : Handle = CppOp[ConvForward](%586, %151, %589), uses = [[%592.i0], []];
  %593 : Float(2, 1024, 14, 14), %594 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%590, %152, %153), uses = [[%595.i0], []];
  %596 : Float(2, 1024, 14, 14), %597 : Handle = ^Add(True)(%593, %566), uses = [[%598.i0], []];
  %599 : Float(2, 1024, 14, 14), %600 : Handle = ^Threshold(0, 0, True)(%596), uses = [[%601.i0, %628.i1], []];
  %602 : UNKNOWN_TYPE = Undefined(), uses = [%601.i2];
  %603 : Float(2, 256, 14, 14), %604 : Handle = CppOp[ConvForward](%599, %156, %602), uses = [[%605.i0], []];
  %606 : Float(2, 256, 14, 14), %607 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%603, %157, %158), uses = [[%608.i0], []];
  %609 : Float(2, 256, 14, 14), %610 : Handle = ^Threshold(0, 0, True)(%606), uses = [[%611.i0], []];
  %612 : UNKNOWN_TYPE = Undefined(), uses = [%611.i2];
  %613 : Float(2, 256, 14, 14), %614 : Handle = CppOp[ConvForward](%609, %161, %612), uses = [[%615.i0], []];
  %616 : Float(2, 256, 14, 14), %617 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%613, %162, %163), uses = [[%618.i0], []];
  %619 : Float(2, 256, 14, 14), %620 : Handle = ^Threshold(0, 0, True)(%616), uses = [[%621.i0], []];
  %622 : UNKNOWN_TYPE = Undefined(), uses = [%621.i2];
  %623 : Float(2, 1024, 14, 14), %624 : Handle = CppOp[ConvForward](%619, %166, %622), uses = [[%625.i0], []];
  %626 : Float(2, 1024, 14, 14), %627 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%623, %167, %168), uses = [[%628.i0], []];
  %629 : Float(2, 1024, 14, 14), %630 : Handle = ^Add(True)(%626, %599), uses = [[%631.i0], []];
  %632 : Float(2, 1024, 14, 14), %633 : Handle = ^Threshold(0, 0, True)(%629), uses = [[%634.i0, %661.i1], []];
  %635 : UNKNOWN_TYPE = Undefined(), uses = [%634.i2];
  %636 : Float(2, 256, 14, 14), %637 : Handle = CppOp[ConvForward](%632, %171, %635), uses = [[%638.i0], []];
  %639 : Float(2, 256, 14, 14), %640 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%636, %172, %173), uses = [[%641.i0], []];
  %642 : Float(2, 256, 14, 14), %643 : Handle = ^Threshold(0, 0, True)(%639), uses = [[%644.i0], []];
  %645 : UNKNOWN_TYPE = Undefined(), uses = [%644.i2];
  %646 : Float(2, 256, 14, 14), %647 : Handle = CppOp[ConvForward](%642, %176, %645), uses = [[%648.i0], []];
  %649 : Float(2, 256, 14, 14), %650 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%646, %177, %178), uses = [[%651.i0], []];
  %652 : Float(2, 256, 14, 14), %653 : Handle = ^Threshold(0, 0, True)(%649), uses = [[%654.i0], []];
  %655 : UNKNOWN_TYPE = Undefined(), uses = [%654.i2];
  %656 : Float(2, 1024, 14, 14), %657 : Handle = CppOp[ConvForward](%652, %181, %655), uses = [[%658.i0], []];
  %659 : Float(2, 1024, 14, 14), %660 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%656, %182, %183), uses = [[%661.i0], []];
  %662 : Float(2, 1024, 14, 14), %663 : Handle = ^Add(True)(%659, %632), uses = [[%664.i0], []];
  %665 : Float(2, 1024, 14, 14), %666 : Handle = ^Threshold(0, 0, True)(%662), uses = [[%667.i0, %694.i1], []];
  %668 : UNKNOWN_TYPE = Undefined(), uses = [%667.i2];
  %669 : Float(2, 256, 14, 14), %670 : Handle = CppOp[ConvForward](%665, %186, %668), uses = [[%671.i0], []];
  %672 : Float(2, 256, 14, 14), %673 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%669, %187, %188), uses = [[%674.i0], []];
  %675 : Float(2, 256, 14, 14), %676 : Handle = ^Threshold(0, 0, True)(%672), uses = [[%677.i0], []];
  %678 : UNKNOWN_TYPE = Undefined(), uses = [%677.i2];
  %679 : Float(2, 256, 14, 14), %680 : Handle = CppOp[ConvForward](%675, %191, %678), uses = [[%681.i0], []];
  %682 : Float(2, 256, 14, 14), %683 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%679, %192, %193), uses = [[%684.i0], []];
  %685 : Float(2, 256, 14, 14), %686 : Handle = ^Threshold(0, 0, True)(%682), uses = [[%687.i0], []];
  %688 : UNKNOWN_TYPE = Undefined(), uses = [%687.i2];
  %689 : Float(2, 1024, 14, 14), %690 : Handle = CppOp[ConvForward](%685, %196, %688), uses = [[%691.i0], []];
  %692 : Float(2, 1024, 14, 14), %693 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%689, %197, %198), uses = [[%694.i0], []];
  %695 : Float(2, 1024, 14, 14), %696 : Handle = ^Add(True)(%692, %665), uses = [[%697.i0], []];
  %698 : Float(2, 1024, 14, 14), %699 : Handle = ^Threshold(0, 0, True)(%695), uses = [[%700.i0, %727.i1], []];
  %701 : UNKNOWN_TYPE = Undefined(), uses = [%700.i2];
  %702 : Float(2, 256, 14, 14), %703 : Handle = CppOp[ConvForward](%698, %201, %701), uses = [[%704.i0], []];
  %705 : Float(2, 256, 14, 14), %706 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%702, %202, %203), uses = [[%707.i0], []];
  %708 : Float(2, 256, 14, 14), %709 : Handle = ^Threshold(0, 0, True)(%705), uses = [[%710.i0], []];
  %711 : UNKNOWN_TYPE = Undefined(), uses = [%710.i2];
  %712 : Float(2, 256, 14, 14), %713 : Handle = CppOp[ConvForward](%708, %206, %711), uses = [[%714.i0], []];
  %715 : Float(2, 256, 14, 14), %716 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%712, %207, %208), uses = [[%717.i0], []];
  %718 : Float(2, 256, 14, 14), %719 : Handle = ^Threshold(0, 0, True)(%715), uses = [[%720.i0], []];
  %721 : UNKNOWN_TYPE = Undefined(), uses = [%720.i2];
  %722 : Float(2, 1024, 14, 14), %723 : Handle = CppOp[ConvForward](%718, %211, %721), uses = [[%724.i0], []];
  %725 : Float(2, 1024, 14, 14), %726 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%722, %212, %213), uses = [[%727.i0], []];
  %728 : Float(2, 1024, 14, 14), %729 : Handle = ^Add(True)(%725, %698), uses = [[%730.i0], []];
  %731 : Float(2, 1024, 14, 14), %732 : Handle = ^Threshold(0, 0, True)(%728), uses = [[%733.i0, %760.i0], []];
  %734 : UNKNOWN_TYPE = Undefined(), uses = [%733.i2];
  %735 : Float(2, 512, 14, 14), %736 : Handle = CppOp[ConvForward](%731, %216, %734), uses = [[%737.i0], []];
  %738 : Float(2, 512, 14, 14), %739 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%735, %217, %218), uses = [[%740.i0], []];
  %741 : Float(2, 512, 14, 14), %742 : Handle = ^Threshold(0, 0, True)(%738), uses = [[%743.i0], []];
  %744 : UNKNOWN_TYPE = Undefined(), uses = [%743.i2];
  %745 : Float(2, 512, 7, 7), %746 : Handle = CppOp[ConvForward](%741, %221, %744), uses = [[%747.i0], []];
  %748 : Float(2, 512, 7, 7), %749 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%745, %222, %223), uses = [[%750.i0], []];
  %751 : Float(2, 512, 7, 7), %752 : Handle = ^Threshold(0, 0, True)(%748), uses = [[%753.i0], []];
  %754 : UNKNOWN_TYPE = Undefined(), uses = [%753.i2];
  %755 : Float(2, 2048, 7, 7), %756 : Handle = CppOp[ConvForward](%751, %226, %754), uses = [[%757.i0], []];
  %758 : Float(2, 2048, 7, 7), %759 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%755, %227, %228), uses = [[%767.i0], []];
  %761 : UNKNOWN_TYPE = Undefined(), uses = [%760.i2];
  %762 : Float(2, 2048, 7, 7), %763 : Handle = CppOp[ConvForward](%731, %231, %761), uses = [[%764.i0], []];
  %765 : Float(2, 2048, 7, 7), %766 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%762, %232, %233), uses = [[%767.i1], []];
  %768 : Float(2, 2048, 7, 7), %769 : Handle = ^Add(True)(%758, %765), uses = [[%770.i0], []];
  %771 : Float(2, 2048, 7, 7), %772 : Handle = ^Threshold(0, 0, True)(%768), uses = [[%773.i0, %800.i1], []];
  %774 : UNKNOWN_TYPE = Undefined(), uses = [%773.i2];
  %775 : Float(2, 512, 7, 7), %776 : Handle = CppOp[ConvForward](%771, %236, %774), uses = [[%777.i0], []];
  %778 : Float(2, 512, 7, 7), %779 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%775, %237, %238), uses = [[%780.i0], []];
  %781 : Float(2, 512, 7, 7), %782 : Handle = ^Threshold(0, 0, True)(%778), uses = [[%783.i0], []];
  %784 : UNKNOWN_TYPE = Undefined(), uses = [%783.i2];
  %785 : Float(2, 512, 7, 7), %786 : Handle = CppOp[ConvForward](%781, %241, %784), uses = [[%787.i0], []];
  %788 : Float(2, 512, 7, 7), %789 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%785, %242, %243), uses = [[%790.i0], []];
  %791 : Float(2, 512, 7, 7), %792 : Handle = ^Threshold(0, 0, True)(%788), uses = [[%793.i0], []];
  %794 : UNKNOWN_TYPE = Undefined(), uses = [%793.i2];
  %795 : Float(2, 2048, 7, 7), %796 : Handle = CppOp[ConvForward](%791, %246, %794), uses = [[%797.i0], []];
  %798 : Float(2, 2048, 7, 7), %799 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%795, %247, %248), uses = [[%800.i0], []];
  %801 : Float(2, 2048, 7, 7), %802 : Handle = ^Add(True)(%798, %771), uses = [[%803.i0], []];
  %804 : Float(2, 2048, 7, 7), %805 : Handle = ^Threshold(0, 0, True)(%801), uses = [[%806.i0, %833.i1], []];
  %807 : UNKNOWN_TYPE = Undefined(), uses = [%806.i2];
  %808 : Float(2, 512, 7, 7), %809 : Handle = CppOp[ConvForward](%804, %251, %807), uses = [[%810.i0], []];
  %811 : Float(2, 512, 7, 7), %812 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%808, %252, %253), uses = [[%813.i0], []];
  %814 : Float(2, 512, 7, 7), %815 : Handle = ^Threshold(0, 0, True)(%811), uses = [[%816.i0], []];
  %817 : UNKNOWN_TYPE = Undefined(), uses = [%816.i2];
  %818 : Float(2, 512, 7, 7), %819 : Handle = CppOp[ConvForward](%814, %256, %817), uses = [[%820.i0], []];
  %821 : Float(2, 512, 7, 7), %822 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%818, %257, %258), uses = [[%823.i0], []];
  %824 : Float(2, 512, 7, 7), %825 : Handle = ^Threshold(0, 0, True)(%821), uses = [[%826.i0], []];
  %827 : UNKNOWN_TYPE = Undefined(), uses = [%826.i2];
  %828 : Float(2, 2048, 7, 7), %829 : Handle = CppOp[ConvForward](%824, %261, %827), uses = [[%830.i0], []];
  %831 : Float(2, 2048, 7, 7), %832 : Handle = CppOp[N5torch8autograd16BatchNormForwardE](%828, %262, %263), uses = [[%833.i0], []];
  %834 : Float(2, 2048, 7, 7), %835 : Handle = ^Add(True)(%831, %804), uses = [[%836.i0], []];
  %837 : Float(2, 2048, 7, 7), %838 : Handle = ^Threshold(0, 0, True)(%834), uses = [[%839.i0], []];
  %840 : Float(2, 2048, 1, 1), %841 : Handle = ^AvgPool2d(7, 7, 0, False, True)(%837), uses = [[%842.i0], []];
  %843 : Float(2, 2048), %844 : Handle = ^View((2, -1))(%840), uses = [[%848.i1], []];
  %846 : Float(2048!, 1000!), %847 : Handle = ^Transpose(0, 1)(%266), uses = [[%848.i2], []];
  %849 : Float(2, 1000), %850 : Handle = ^Addmm(1, 1, False)(%267, %843, %846), uses = [[%0.i0], []];
  return (%849);
}
